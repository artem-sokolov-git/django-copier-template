from . import env

SECRET_KEY = env.str("SECRET_KEY", "change_this_secret_key")

DJANGO_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

THIRD_PARTY_APPS = [
    # There should be batteries here.
{%- if api == "drf" %}
    "rest_framework",
    "drf_spectacular",
{%- endif %}
]

LOCAL_APPS = [
    "core.project",
    "core.apps.api",
]

INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "core.project.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "core.project.wsgi.application"

DATABASES = {
    "default": {
        {%- if db_type == "postgresql" %}
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env.str("POSTGRES_DB", "{{db_name}}"),
        "USER": env.str("POSTGRES_USER", "{{db_user}}"),
        "PASSWORD": env.str("POSTGRES_PASSWORD", None),
        "HOST": "postgresql",
        "PORT": 5432,
        {%- elif db_type == "mysql" %}
        "ENGINE": "django.db.backends.mysql",
        "NAME": env.str("MYSQL_DATABASE", "{{db_name}}"),
        "USER": env.str("MYSQL_USER", "{{db_user}}"),
        "PASSWORD": env.str("MYSQL_PASSWORD", None),
        "HOST": "mysql",
        "PORT": 3306,
        {%- endif %}
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

STATIC_URL = "static/"

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

{%- if api == "drf" %}
REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
    ],
    "DEFAULT_PARSER_CLASSES": [
        "rest_framework.parsers.JSONParser",
    ],
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}

SPECTACULAR_SETTINGS = {
    "TITLE": "{{ project_name }} API",
    "DESCRIPTION": "API documentation for {{ project_name }}",
    "VERSION": "{{ project_version }}",
    "SERVE_INCLUDE_SCHEMA": False,
}
{%- endif %}
