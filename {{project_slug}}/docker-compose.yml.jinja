services:

  web:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: {{project_slug}}_web
    volumes:
      - .:/app
    ports:
      - ${DOCKER_DJANGO_PORT:-8000}:8000
    env_file:
      - .env
    restart: unless-stopped
    networks:
      - network
    depends_on:
      {%- if database_type == "postgresql" %}
      postgresql: {%- endif %}
      {%- if database_type == "mysql" %}
      mysql: {%- endif %}
        condition: service_healthy

  {%- if database_type == "postgresql" %}
  postgresql:
    image: postgres:17.5
    container_name: {{database_name}}
    volumes:
      - data:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{database_user}} -d {{database_name}}"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      - network
  {%- endif %}

  {%- if database_type == "mysql" %}
  mysql:
    image: mysql:9.4.0
    container_name: {{database_name}}
    volumes:
      - data:/var/lib/mysql
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped
    networks:
      - network
  {%- endif %}

volumes:
  data:

networks:
  network:
    driver: bridge
